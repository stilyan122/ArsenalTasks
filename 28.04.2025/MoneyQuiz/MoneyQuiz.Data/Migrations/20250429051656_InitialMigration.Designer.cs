// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoneyQuiz.Data;

#nullable disable

namespace MoneyQuiz.Data.Migrations
{
    [DbContext(typeof(MoneyQuizDbContext))]
    [Migration("20250429051656_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MoneyQuiz.Data.Models.Answer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AnswerText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answers");
                });

            modelBuilder.Entity("MoneyQuiz.Data.Models.GameSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("FinalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("GameSessions");
                });

            modelBuilder.Entity("MoneyQuiz.Data.Models.Lifeline", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PlayerGameSessionId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UsedOnQuestionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayerGameSessionId");

                    b.HasIndex("UsedOnQuestionId");

                    b.ToTable("Lifelines");
                });

            modelBuilder.Entity("MoneyQuiz.Data.Models.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("MoneyQuiz.Data.Models.PlayerAnswer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnswerId")
                        .HasColumnType("int");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<int>("PlayerSessionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnswerId");

                    b.HasIndex("PlayerSessionId");

                    b.ToTable("PlayerAnswers");
                });

            modelBuilder.Entity("MoneyQuiz.Data.Models.PlayerGameSession", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int>("SessionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.HasIndex("SessionId");

                    b.ToTable("PlayerGameSessions");
                });

            modelBuilder.Entity("MoneyQuiz.Data.Models.Question", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("MoneyQuiz.Data.Models.Answer", b =>
                {
                    b.HasOne("MoneyQuiz.Data.Models.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("MoneyQuiz.Data.Models.Lifeline", b =>
                {
                    b.HasOne("MoneyQuiz.Data.Models.PlayerGameSession", "PlayerGameSession")
                        .WithMany("Lifelines")
                        .HasForeignKey("PlayerGameSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoneyQuiz.Data.Models.Question", "UsedOnQuestion")
                        .WithMany()
                        .HasForeignKey("UsedOnQuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlayerGameSession");

                    b.Navigation("UsedOnQuestion");
                });

            modelBuilder.Entity("MoneyQuiz.Data.Models.PlayerAnswer", b =>
                {
                    b.HasOne("MoneyQuiz.Data.Models.Answer", "Answer")
                        .WithMany("PlayerAnswers")
                        .HasForeignKey("AnswerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoneyQuiz.Data.Models.PlayerGameSession", "PlayerSession")
                        .WithMany("PlayerAnswers")
                        .HasForeignKey("PlayerSessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Answer");

                    b.Navigation("PlayerSession");
                });

            modelBuilder.Entity("MoneyQuiz.Data.Models.PlayerGameSession", b =>
                {
                    b.HasOne("MoneyQuiz.Data.Models.Player", "Player")
                        .WithMany("PlayerGameSessions")
                        .HasForeignKey("PlayerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MoneyQuiz.Data.Models.GameSession", "Session")
                        .WithMany("PlayerGameSessions")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Player");

                    b.Navigation("Session");
                });

            modelBuilder.Entity("MoneyQuiz.Data.Models.Answer", b =>
                {
                    b.Navigation("PlayerAnswers");
                });

            modelBuilder.Entity("MoneyQuiz.Data.Models.GameSession", b =>
                {
                    b.Navigation("PlayerGameSessions");
                });

            modelBuilder.Entity("MoneyQuiz.Data.Models.Player", b =>
                {
                    b.Navigation("PlayerGameSessions");
                });

            modelBuilder.Entity("MoneyQuiz.Data.Models.PlayerGameSession", b =>
                {
                    b.Navigation("Lifelines");

                    b.Navigation("PlayerAnswers");
                });

            modelBuilder.Entity("MoneyQuiz.Data.Models.Question", b =>
                {
                    b.Navigation("Answers");
                });
#pragma warning restore 612, 618
        }
    }
}
